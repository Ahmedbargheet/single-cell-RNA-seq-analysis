---
title: "scRNA pipeline"
author: "Ahmed Bargheet, PhD"
title-block-banner: true
format:
  html:
    theme: flatly
    toc: true
    toc-location: left
    number-sections: true
    code-fold: true
execute:
  warning: false
  message: false
editor: visual
---

## Import libraries

```{r}
library(tidyverse)
library(Seurat)
library(hdf5r)
```

## Import the dataset

```{r}
#| output: false
# Read 10X CellRanger (HDF5) h5 format
pbmc.data <- Read10X_h5("/Users/aba189/Downloads/20k_NSCLC_DTC_3p_nextgem_Multiplex_count_raw_feature_bc_matrix.h5", 
                        use.names = TRUE)

str(pbmc.data)

# Get only the gene expression
cts <- pbmc.data$`Gene Expression`

# Read it in a Serate object
nsclc.seurat.obj <- CreateSeuratObject(
  counts = cts, project = "NSCLC",
  min.cells = 3, # keep features that expressed in at least 3 cells
  min.features = 200) # keep cells with at least 200 features

```

## Explore the Seurat object

### Metadata peek

```{r}
# Metadata peek
head(nsclc.seurat.obj@meta.data)
summary(nsclc.seurat.obj@meta.data$nCount_RNA)
summary(nsclc.seurat.obj@meta.data$nFeature_RNA)
```

### Distributions

```{r}
# Distributions
VlnPlot(nsclc.seurat.obj, features = c("nCount_RNA","nFeature_RNA"), pt.size = 0.1)

```

### Relationship

```{r}
# Relationship between counts and detected genes
FeatureScatter(nsclc.seurat.obj, feature1 = "nCount_RNA", feature2 = "nFeature_RNA") +
  geom_smooth(method = 'lm')

```

## Quality control

### 1. Precentage of mitochonderia reads

```{r}
# Mitochondrial fraction (human symbols use MT-)
nsclc.seurat.obj[["percent.mt"]] <- PercentageFeatureSet(nsclc.seurat.obj, pattern = "^MT-")

# Optional extras (uncomment if needed)
# nsclc.seurat.obj[["percent.ribo"]] <- PercentageFeatureSet(nsclc.seurat.obj, pattern = "^RPS|^RPL")
# nsclc.seurat.obj[["percent.hb"]]   <- PercentageFeatureSet(nsclc.seurat.obj, pattern = "^HB[AB]")
```

### 2. Plot distributions 

```{r}
# Plot distributions
VlnPlot(nsclc.seurat.obj, features = "percent.mt", 
        pt.size = 0.1)
```

### 3. Filtering and plotting after filtering

```{r}
nsclc.seurat.obj_f <- subset(nsclc.seurat.obj, 
                           subset = nFeature_RNA >= 200 & nFeature_RNA <= 6000 & 
                                    nCount_RNA <= 30000 & 
                                    percent.mt <= 10)

```

```{r}
VlnPlot(nsclc.seurat.obj_f, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
```

```{r}
# Relationship between counts and detected genes
FeatureScatter(nsclc.seurat.obj_f, feature1 = "nCount_RNA", feature2 = "nFeature_RNA") +
  geom_smooth(method = 'lm')
```

## Normalization

#### **SCTransform**

```{r}
#| eval: false
nsclc.seurat.obj_n <- SCTransform(nsclc.seurat.obj_f, 
                                vars.to.regress = "percent.mt", verbose = FALSE,
                                conserve.memory = TRUE, variable.features.n = 3000)

```
